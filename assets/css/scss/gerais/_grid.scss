// Variaveis do grid
$cols: 12;
$gutter: 20px;
$lg: 1200px; //Large device
$md: 760px; //Medium device
$sm: 480px; //Small device

// Box-sizing
*, *::after, *::before {
	box-sizing: border-box;
}

// Mixin de media-queries
@mixin device($size) {
	@if $size == lg {
		@media screen and (min-width: #{$lg}) {
			@content;
		}
	}
	@else if $size == md {
		@media screen and (min-width: #{$md}) and (max-width: #{$lg - 1}) {
			@content;
		}
	}
	@else if $size == sm {
		@media screen and (max-width: #{$md - 1}) {
			@content;
		}
	}
}


// Função do grid

@function col($col, $offset: false) {
	$width: $col / $cols * 100 + '%';
	$result: calc(#{$width} - #{$gutter});
	@if $offset == offset {
		$gutter: $gutter / 2;
		$result: calc(#{$width} + #{$gutter});
	}
	@return $result;
}

// Gera as classes de col

@for $i from 1 through $cols {
	.col-#{$i} {
		width: col($i);
	}
}

// Mixin estrutura do col

@mixin col-structure {
	float: left;
	min-height: 1px;
	margin-left: $gutter / 2;
	margin-right: $gutter / 2;
	@include device(sm) {
		width: 100%;
		float: none;
		margin-left: 0px;
		margin-right: 0px;
	}
}

[class^="col-"] {
	@include col-structure;
}

// Gera as classes de offset

@for $i from 1 through $cols {
	.offset-#{$i} {
		margin-left: col($i, offset);
		@extend %offset;
	}
}

@include device(sm) {
	%offset {
		margin-left: 0px;
	}
}

// Mixin de clearfix

@mixin clearfix {
	&::after, &::before {
		content: '';
		display: table;
		clear: both;
	}
}

@mixin container {
	max-width: $lg;
	margin: 0px auto;
	position: relative;
	@include device(md) {
		max-width: $md;
	}
	@include device(sm) {
		max-width: $sm;
		padding-left: 10px;
		padding-right: 10px;
	}
	@include clearfix;
}

.container {
	@include container;
}

@mixin row {
	position: relative;
	margin-left: -$gutter/2;
	margin-right: -$gutter/2;
	@include device(sm) {
		margin-left: 0px;
		margin-right: 0px;
	}
	@include clearfix;
}

.row {
	@include row;
}
